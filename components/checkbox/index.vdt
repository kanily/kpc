import {getRestProps} from '../utils';

const {
    className, disabled, falseValue, 
    children, value, trueValue, style,
    ref, key, indeterminate, title, ...rest
} = self.get();

const classNameObj = {
    'k-checkbox': true,
    'k-disabled': disabled,
    'k-checked': self.isChecked(),
    [className]: className,
    'k-indeterminate': indeterminate,
};

let evClick;
const events = [
    'ev-click',
    'ev-mouseenter', 'ev-mouseleave'
].reduce((memo, name) => {
    if (rest[name]) {
        if (name === 'ev-click') {
            // do not bind click to label, otherwise it will trigger click event twice
            evClick = rest[name];
        } else {
            memo[name] = rest[name];
        }
        delete rest[name];
    }
    return memo;
}, {});

<label class={{ classNameObj }} style={{ style }} 
    tabindex={{ disabled ? null : "0" }}
    ev-keypress={{ self._onKeypress }}
    {{ ...events }}
    title={{ title }}
>
    <span class="k-wrapper">
        <input type="checkbox" disabled={{ disabled }}
            checked={{ _detectCheckboxChecked(self, 'value', trueValue) }}
			value={{ trueValue }}
            v-model-true={{ trueValue }}
            v-model-false={{ falseValue }}
            tabindex="-1"
            {{ ...getRestProps(self, rest) }}
            ev-click={{ (e) => {
                _setCheckboxModel(self, 'value', trueValue, falseValue, e, $this);
                evClick && evClick(e);
            } }}
            ref="input"
        />
    </span>
    <span class="k-text" v-if={{ children }}>{{ children }}</span>
</label>
