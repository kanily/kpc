import {getRestProps} from '../utils';

const {
    className, children, label,
    isValid, isDirty, hideLabel, htmlFor,
    errorClassName, rules, fluid
} = self.get();

const classNameObj = {
    'k-form-item': true,
    'k-invalid': isDirty && isValid === false,
    'k-valid': isDirty && isValid === true,
    [className]: className,
    'k-fluid': fluid,
};

const labelWidth = self.form && self.form.get('labelWidth');
let labelStyle;
if (labelWidth != null) {
    if (/^\d+$/.test(labelWidth)) {
        labelStyle = {width: labelWidth + 'px'};
    } else {
        labelStyle = {width: labelWidth};
    }
}

const starOnRequired = self.form && self.form.get('starOnRequired');

<div {{ ...getRestProps(self) }} class={{ classNameObj }}
    ev-change={{ self._onChange }}
    ev-focusout={{ self._onFocusout }}
>
    <label for={{ htmlFor }} class="k-label" v-if={{ !hideLabel }}
        style={{ labelStyle }}
    >
        <span class="k-star" v-if={{ starOnRequired && rules && rules.required }}>*</span>
        <b:label>{{ label }}</b:label>
    </label>
    <div class="k-content">
        <b:content>{{ children }}</b:content>
        <Animate v-if={{ self.get('isValid') === false }}
            class={{ {"k-error": true, [errorClassName]: errorClassName} }}
            a:transition="c-fade"
        >{{ self.get('message') }}</Animate>
    </div>
    <div class="k-append" v-if={{ blocks.append }}>
        <b:append /> 
    </div>
</div>
