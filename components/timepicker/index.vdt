import TimePanel from './panel';
import {_$, getRestProps} from '../utils';
import {Select, Option} from '../select';

const {
    range, multiple, _options, size,
    clearable, placeholder, disabled,
    className, container, _value,
    maxDate, minDate
} = self.get(); 

const _placeholder = range ?
    _$('开始时间 ~ 结束时间') :
    _$('请选择时间');

<template>
    <t:parent 
        v-if={{ !_options || range }}
        placeholder={{ _placeholder }}
        class={{ {
            "k-time-picker": true,
        } }}
        Panel={{ TimePanel }}
        showFooter
    >
        <b:suffix><i class="ion-ios-clock-outline"></i></b:suffix>
        <b:singe-panel>
            <TimePanel
                value={{ _value }}
                ev-$change:value={{ self._onChangeValue }}
                ev-hide={{ self._hide }}
                ref="begin"
                multiple={{ multiple }}
                maxDate={{ maxDate }}
                minDate={{ minDate }}
            />
        </b:singe-panel>
    </t:parent>
    <Select v-else
        v-model="value" 
        {{ ...getRestProps(self) }}
        multiple={{ multiple }}
        placeholder={{ placeholder || _placeholder }}
        hideIcon
        clearable={{ clearable }}
        disabled={{ disabled }}
        size={{ size }}
        class={{ {
            'k-datepicker': true,
            [className]: className
        } }}
        container={{ container }}
        data={{ _options }}
    >
        <b:suffix><i class="ion-ios-clock-outline"></i></b:suffix>
    </Select>
</template>
